unmap ,
unmap ;

let maplocalleader = ",,"
let mapleader = " "

" remember a long list of our commands from the past
set history=1000

" searching should be case insensitive unless we used a capital letter
set ignorecase
set smartcase

" jump to the matches while typing
set incsearch

" highlight the searchterms (and let us unhighlight easily)
set hlsearch

" assume /g flag on :s substitutions
set gdefault

set undolevels=1000

" show partial commands
set showcmd

set showmode
set commentary

" map < and > to repeated shifting in visual and select modes
vnoremap < <gv
vnoremap > >gv

" map <CR> to remove highlighting
nnoremap <CR> :noh<CR>

" Replay macros over visual range
function! ExecuteMacroOverVisualRange()
  echo "@".getcmdline()
  execute ":'<,'>normal @".nr2char(getchar())
endfunction

vnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>

"""""""""""""""
" HELPFUL TIP "
"""""""""""""""
" If you want to see what a key is mapped to, use the following command:
" :actionlist
nnoremap <SPACE>a :actionlist<CR>
nnoremap <SPACE>r :source ~/.ideavimrc<CR>

" For whatever reason the <localleader> mapping is a little inconsistent when 
" there are conflicts with other keys. Going to just use [,,] for now
" nnoremap ,,t <Action>(QuickJavaDoc)
" The docs say: 
" Executing actions:
"   :action {action_id}
"   Execute an action by {action_id}. Works from Ex command line.
"   Please don't use :action in mappings. Use <Action> instead.
"   <Action>({action_id})
"   For the mappings you can use a special <Action> keyword. Don't forget the parentheses.
"   E.g. map gh <Action>(ShowErrorDescription) <- execute hover on gh.
"   ⚠️ Mappings to <Action> don't work with noremap. If you know the case when it's needed, please let us know.
" BUT I found that :action {action_id}<CR> works just fine so i'm going to do
" that for now

nnoremap ,t :action ParameterInfo<CR>
nnoremap ,,t :action QuickJavaDoc<CR>

nnoremap <SPACE><SPACE> :action MaximizeEditorInSplit<CR>
vnoremap <SPACE><SPACE> :action MaximizeEditorInSplit<CR>
nnoremap <Space>w :action HideAllWindows<CR>
vnoremap <Space>w :action HideAllWindows<CR>
nnoremap <C-w><SPACE> :action MoveEditorToOppositeTabGroup<CR>
vnoremap <C-w><SPACE> :action MoveEditorToOppositeTabGroup<CR>


nnoremap ,,r :action RenameElement<CR>

nnoremap ,,i :action GotoDeclaration<CR>
nnoremap ,,b :action GotoDeclaration<CR>
nnoremap ,,s :action GotoImplementation<CR>
nnoremap ,,u :action GotoSuperMethod<CR>

nnoremap <SPACE>fs :action FileStructurePopup<CR>
nnoremap gm :action FileStructurePopup<CR>
nnoremap ,,f :action GotoFile<CR>

" Search
nnoremap <SPACE>s :action SearchEverywhere<CR>
nnoremap <SPACE>u :action ShowUsages<CR>

" Navigation helpers 
nnoremap <C-o> :action Back<CR>
nnoremap <C-i> :action Forward<CR>
nnoremap <C-n> :action NextTab<CR>
nnoremap <C-p> :action PreviousTab<CR>

" Taken from Junegunn
nnoremap ,,<space> :action SearchEverywhere<CR>
nnoremap <SPACE>ff :action FindInPath<CR>
nnoremap <SPACE>fu :action FindUsages<CR>
nnoremap <SPACE>su :action ShowUsages<CR>
nnoremap <SPACE>cv :action ChangeView<CR>
nnoremap <SPACE>bb :action ToggleLineBreakpoint<CR>
nnoremap <SPACE>br :action ViewBreakpoints<CR>
nnoremap <SPACE>ic :action InspectCode<CR>
nnoremap <SPACE>oi :action OptimizeImports<CR>
nnoremap <SPACE>re :action RenameElement<CR>
nnoremap <SPACE>rf :action RenameFile<CR>
nnoremap <SPACE>gq :action ReformatCode<CR>
nnoremap <SPACE>mv :action ActivateMavenProjectsToolWindow<CR>
nnoremap <SPACE>dd :action Debug<CR>
nnoremap <SPACE>dc :action ChooseDebugConfiguration<CR>
nnoremap <SPACE>rr :action Run<CR>
nnoremap <SPACE>rc :action ChooseRunConfiguration<CR>
nnoremap <SPACE>q  :action CloseActiveTab<CR>
nnoremap <SPACE>ga :action GotoAction<CR>
nnoremap <SPACE>gi :action GotoImplementation<CR>
nnoremap <SPACE>gs :action GotoSuperMethod<CR>
nnoremap <SPACE>gd :action GotoDeclaration<CR>
nnoremap <SPACE>gt :action GotoTest<CR>
nnoremap <SPACE>gr :action GotoRelated<CR>
nnoremap <SPACE>gb :action Annotate<CR>
nnoremap <SPACE>tl Vy<CR>:action ActivateTerminalToolWindow<CR>
vnoremap <SPACE>tl y<CR>:action ActivateTerminalToolWindow<CR>
nnoremap ]e :action GotoNextError<CR>
nnoremap [e :action GotoPreviousError<CR>

nnoremap gr :action ShowUsages<CR>
nnoremap gi :action GotoImplementation<CR>
"nnoremap gb :Buffers<CR>
nnoremap gf :action GotoFile<CR>
nnoremap gs :action FindInPath<CR>
nnoremap gz :action FindInPath<CR>
nnoremap gt :action GotoAction<CR>
nnoremap gb :action RecentFiles<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gG :action VimFilePrevious<CR>
nnoremap gn :action GotoNextError<CR>
nnoremap gp :action GotoPreviousError<CR>
nnoremap gu :action FindUsages<CR>

" More Leader Shortcuts (space)
"nnoremap <Space><Space> :noh<CR>:action HideAllWindows<CR>
nnoremap <Space>s :action ReformatCode<CR>:action OptimizeImports<CR>:w<CR>
nnoremap <Space>S :action RearrangeCode<CR>:w<CR>
nnoremap <Space>t :action Rerun<CR>
nnoremap <Space>c :action RenameElement<CR>
nnoremap <Space>r :action RefactoringMenu<CR>  
nnoremap <Space>R :action Run<CR>
nnoremap <Space>e :action RunClass<CR>
nnoremap <Space>b :action ReformatCode<CR>:w<CR>:action MakeModule<CR>
nnoremap <Space>B :action CompileProject<CR>
nnoremap <Space>i :action Inline<CR>


nnoremap <C-t> :action ActivateTerminalToolWindow<CR>  

nnoremap <Space>M :action Maven.Reimport<CR>
nnoremap <Space>m :action ShowIntentionActions<CR>
nnoremap <Space>n :action Generate<CR>
nnoremap <Space>E :action Maven.ExecuteGoal<CR>
nnoremap <Space>P :action IntentionActionAsAction_com.intellij.openapi.editor.actions.lists.SplitLineIntention<CR>
nnoremap <Space>I :action IntentionActionAsAction_com.intellij.codeInsight.intention.impl.AddSingleMemberStaticImportAction<CR>
nnoremap <Space>. f.i<CR><ESC>l
nnoremap <Space>, f,a<CR><ESC>l



" Matching code with vscode - unifying all configs
nnoremap gj :action NextTab<CR>
nnoremap gk :action PreviousTab<CR>

"" VS Code Commands to migrate over
" " gf/gF . Map to go to definition for now
" nnoremap gh <Cmd>call VSCodeNotify('editor.action.showHover')<CR>
nnoremap gh :action QuickJavaDoc<CR>
" nnoremap gf <Cmd>call <SID>vscodeGoToDefinition('revealDeclaration')<CR>
" nnoremap gd <Cmd>call <SID>vscodeGoToDefinition('revealDefinition')<CR>
" nnoremap <C-]> <Cmd>call <SID>vscodeGoToDefinition('revealDefinition')<CR>
" nnoremap gO <Cmd>call VSCodeNotify('workbench.action.gotoSymbol')<CR>
" nnoremap gF <Cmd>call VSCodeNotify('editor.action.peekDeclaration')<CR>
" nnoremap gD <Cmd>call VSCodeNotify('editor.action.peekDefinition')<CR>
" nnoremap gH <Cmd>call VSCodeNotify('editor.action.referenceSearch.trigger')<CR>
"
" xnoremap K <Cmd>call VSCodeNotify('editor.action.showHover')<CR>
" xnoremap gh <Cmd>call VSCodeNotify('editor.action.showHover')<CR>
" xnoremap gf <Cmd>call <SID>vscodeGoToDefinition('revealDeclaration')<CR>
" xnoremap gd <Cmd>call <SID>vscodeGoToDefinition('revealDefinition')<CR>
" xnoremap <C-]> <Cmd>call <SID>vscodeGoToDefinition('revealDefinition')<CR>
" xnoremap gO <Cmd>call VSCodeNotify('workbench.action.gotoSymbol')<CR>
" xnoremap gF <Cmd>call VSCodeNotify('editor.action.peekDeclaration')<CR>
" xnoremap gD <Cmd>call VSCodeNotify('editor.action.peekDefinition')<CR>
" xnoremap gH <Cmd>call VSCodeNotify('editor.action.referenceSearch.trigger')<CR>
"
" " <C-w> gf opens definition on the side
" nnoremap <C-w>gf <Cmd>call VSCodeNotify('editor.action.revealDefinitionAside')<CR>
" nnoremap <C-w>gd <Cmd>call VSCodeNotify('editor.action.revealDefinitionAside')<CR>
" xnoremap <C-w>gf <Cmd>call VSCodeNotify('editor.action.revealDefinitionAside')<CR>
" xnoremap <C-w>gd <Cmd>call VSCodeNotify('editor.action.revealDefinitionAside')<CR>
"
" " open quickfix menu for spelling corrections and refactoring
" nnoremap z= <Cmd>call VSCodeNotify('editor.action.quickFix')<CR>
"



" Debugging
nnoremap ;d :action Debug<CR>

nnoremap ;R :action Rerun<CR>

nnoremap ;p :action Pause<CR>

nnoremap ;<SPACE> :action Resume<CR>
nnoremap ;r :action Resume<CR>
nnoremap <S-c> :action Resume<CR>

nnoremap ;c :action RunToCursor<CR>

nnoremap ;x :action Stop<CR>

" Debugging with some vim like keys
nnoremap <S-j> :action StepOver<CR>    
nnoremap ;j :action StepOver<CR>    
nnoremap ;n :action StepOver<CR>    

nnoremap <S-k> :action StepInto<CR>
nnoremap ;k :action StepInto<CR>
nnoremap ;i :action StepInto<CR>

nnoremap <S-h> :action StepInto<CR>
nnoremap ;h :action StepOut<CR>
nnoremap ;o :action StepOut<CR>

" Breakpoints
nnoremap <S-t> :action ToggleLineBreakpoint<CR>
nnoremap ;b :action ViewBreakpoints<CR>
nnoremap ;B :action Debugger.RemoveAllBreakpoints<CR>

nnoremap ;; :action EvaluateExpression<CR>
vnoremap ;; :action EvaluateExpression<CR>
nnoremap ;e :action EvaluateExpression<CR>
vnoremap ;e :action EvaluateExpression<CR>


" TODO Consider adding command+shift++] for next windows
" TODO Consider adding command+shift++[ for next windows  -- these are vscode
" defaults and quite nice
